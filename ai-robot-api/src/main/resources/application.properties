server.port=8080
#server.servlet.context-path=/cyp
server.address=0.0.0.0
#JDBC
spring.datasource.url=jdbc:mysql://localhost:3306/cyp?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&yearIsDateType=false&autoReconnect=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456


eureka.instance.prefer-ip-address= true
#客户端每隔这个时间会主动心跳一次，默认值为30s，更新自己的状态。Eureka Server收到心跳后，会通知集群里的其它Eureka Server更新此实例的状态。
eureka.instance.lease-renewal-interval-in-seconds= 4
#设置服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除，一般是lease-renewal-interval-in-seconds的3倍。
eureka.instance.lease-expiration-duration-in-seconds= 12
eureka.client.fetch-registry= true
#如果发现实例在在一定时间，默认值为90s内没有收到心跳，则会注销此实例。
eureka.client.registry-fetch-interval-seconds= 8
eureka.client.serviceUrl.defaultZone=http://lyj:lyj@47.100.93.192:8761/eureka/
#eureka.client.serviceUrl.defaultZone=http://lyj:lyj@localhost:8761/eureka/
spring.application.name=AI-ROBOT
#spring-boot-starter-security 账号密码，默认用户名=user，密码启动项目时生成
spring.security.user.roles=SUPERUSER
spring.security.user.name=lyj
spring.security.user.password=lyj


#当遇到同样名字的时候，是否允许覆盖注册
main.allow-bean-definition-overriding=true 

#mybatis
mybatis.mapper-locations=classpath:mapper/*.xml

#img
imgPath=/root/luyapp/img
#log
logging.config=classpath:logback.xml
#sql.log
logging.level.finance.core.dal.dao=debug
#app.log
#logging.file.max-history=10
#logging.file.max-size=200MB
#logging.level.finance=INFO
#logging.level.org.springframework.boot=DEBUG
#logging.path=/Users/user/logs/finance-card-query-moxie/log/app
#logging.pattern.dateFormat=yyyy-MM-dd HH:mm:ss.SSS
#logging.pattern.level=%5p
#tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.directory=/Users/user/Documents/logs/
server.tomcat.accesslog.pattern=%t %a "%r" %s %S (%D ms)
server.tomcat.accept-count=100
server.tomcat.max-threads=200
#jwt
jwt.cookieName=jyjyjwt
jwt.subject=jyjysubject
jwt.secretKey=dsfdsf_.,2sdfsgi341sa24&^
jwt.issuer=jyjyissuer
jwt.logOutTime=7200000
jwt.dataKey.staffId=staffId
jwt.dataKey.ownerId=ownerId


#redis
#spring.cache.type=REDIS
#spring.cache.redis.key-prefix=cache-
#spring.cache.redis.time-to-live=5d
#spring.cache.redis.cache-null-values=false
#spring redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.1.29
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=2000


# thymeleaf html或者vue的文件目录
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.cache=false
# thymeleaf 文件后缀 （可以不写）
#spring.mvc.view.suffix=.html
# 前端静态资源路径
spring.resources.static-locations=classpath:/statics/

domain=192.168.0.103


#上传文件 单个文件的大小，-1 表示不限制文件大小
multipart.maxFileSize=10Mb
#上传文件 单次请求的文件的总大小，-1 表示不限制文件大小
multipart.maxRequestSize=100Mb



# Elasticsearch
# 9200端口是用来让HTTP REST API来访问ElasticSearch，而9300端口是传输层监听的默认端口
#elasticsearch.ip=127.0.0.1
#elasticsearch.port=9300
#elasticsearch.pool=5
##注意cluster.name需要与config/elasticsearch.yml中的cluster.name一致
#elasticsearch.cluster.name=elasticsearch_cici

#/**注释*/
#有时此模块项目中并没有使用elasticsearch  但是pom.xml  中依赖其他模块，
#其模块中有使用elastic search 所以导致报错，
#此时就给他两行配置就好了，何必纠结
spring.data.elasticsearch.repositories.enabled = true
spring.data.elasticsearch.cluster-nodes = 127.0.0.1:9300
spring.data.elasticsearch.cluster-name = elasticsearch

spring.main.allow-bean-definition-overriding=true
